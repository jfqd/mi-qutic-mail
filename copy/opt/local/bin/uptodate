#!/usr/bin/bash
/opt/local/bin/pkgin -y ug
/opt/local/bin/pkgin clean
svcadm restart dovecot
svcadm restart postfix
svcadm disable amavisd
svcadm disable fail2ban
pkill fail2ban-server
sleep 10
rm /var/run/fail2ban.sock || true
svcadm enable fail2ban
pkill amavisd

if [[ ! `egrep 'msginfo->originating\(c\(.*\)\);' /opt/local/sbin/amavisd` ]]; then
  sed -i \
      "s|  Amavis::load_policy_bank(\$_,\$msginfo) for \@bank_names;|  Amavis::load_policy_bank(\$_,\$msginfo) for \@bank_names;\n  \$msginfo->originating(c(\'originating\'));|" \
      /opt/local/sbin/amavisd
fi

rm /opt/local/lib/svc/manifest/amavisd.xml
cat >> /opt/local/lib/svc/manifest/amavisd.xml << EOF
<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type="manifest" name="export">
  <service name="pkgsrc/amavisd" type="service" version="1">
    <create_default_instance enabled="false" />
    <single_instance />
    <dependency name='fs-local' grouping='require_all' restart_on='none' type='service'>
      <service_fmri value='svc:/system/filesystem/local' />
    </dependency>
    <dependency name='loopback' grouping='require_all' restart_on='error' type='service'>
      <service_fmri value='svc:/network/loopback:default' />
    </dependency>
    <dependency name='physical' grouping='require_all' restart_on='error' type='service'>
      <service_fmri value='svc:/network/physical:default' />
    </dependency>
    <dependency name='name-services' grouping='require_all'  restart_on='refresh' type='service'>
      <service_fmri value='svc:/milestone/name-services' />
    </dependency>
    <dependency name='system-log' grouping='optional_all' restart_on='none' type='service'>
      <service_fmri value='svc:/system/system-log' />
    </dependency>
    <exec_method type="method" name="start" exec="/opt/local/lib/svc/method/amavisd start" timeout_seconds="60" />
    <exec_method type="method" name="stop" exec="/opt/local/lib/svc/method/amavisd stop" timeout_seconds="120" />
    <exec_method type="method" name="refresh" exec="/opt/local/lib/svc/method/amavisd reload" timeout_seconds="60" />
    <exec_method type="method" name="restart" exec="/opt/local/lib/svc/method/amavisd restart" timeout_seconds="60" />
    <property_group name="startd" type="framework">
      <propval name="duration" type="astring" value="contract" />
      <propval name="ignore_error" type="astring" value="core,signal" />
    </property_group>
    <property_group name="application" type="application">
      <propval name="config_file" type="astring" value="/opt/local/etc/amavisd.conf" />
    </property_group>
    <template>
      <common_name>
        <loctext xml:lang="C">Amavisd</loctext>
      </common_name>
    </template>
  </service>
</service_bundle>
EOF
# enable
svccfg import /opt/local/lib/svc/manifest/amavisd.xml
/opt/local/bin/sa-update
chown -R spamd:spamd /var/spamassassin/
chown -R spamd:spamd /opt/local/etc/spamassassin/sa-update-keys/
svcadm enable amavisd
svcs -vx