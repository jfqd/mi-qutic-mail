use strict;
##############################################
#                                            #
#     Amavis Config for SmartOS systems      #
#                                            #
##############################################

################################################################################
## PATHS OF THE LOCAL INSTANCE
#

$path = '/opt/qutic/sbin:/opt/qutic/bin:/opt/local/sbin:/opt/local/bin:/usr/sbin:/sbin:/usr/bin:/bin';

$MYHOME      = '/var/amavis';
$TEMPBASE    = "$MYHOME/tmp";
$ENV{TMPDIR} = $TEMPBASE;
$db_home     = "$MYHOME/db";
$lock_file   = "$MYHOME/var/amavisd.lock";
#$pid_file    = "$MYHOME/var/amavisd.pid";

$unix_socketname = "$MYHOME/amavisd.sock";  # amavisd-release or amavis-milter

$QUARANTINEDIR = undef;
#$quarantine_subdir_levels = 1;      # add level of subdirs to disperse quarantine

################################################################################
## BASE
#

$max_servers = 10;

$daemon_user  = 'amavis';
$daemon_group = 'amavis';

# Hostname (FQDN)
$myhostname = 'mail.example.com';
$mydomain   = 'example.com';

# when enabling addr extensions do also Postfix/main.cf: recipient_delimiter=+
#$recipient_delimiter = '+';

$forward_method = undef;
$notify_method  = 'smtp:[127.0.0.1]:10025';

#$allowed_added_header_fields{lc('X-Virus-Scanned')} = 0;

################################################################################
## LOGGING
#

$log_level = 3;              # verbosity 0..5, -d
#$sa_debug = 1;               # set to 1 if debug SpamAssassin
$log_recip_templ = undef;    # disable by-recipient level-0 log entries
$do_syslog = 1;              # log via syslogd (preferred)
#$syslog_ident = 'amavis';    # syslog ident tag, prepended to all messages
$syslog_facility = 'mail';   # Syslog facility as a string
                             # e.g.: mail, daemon, user, local0, ... local7
$syslog_priority = 'debug';  # Syslog base (minimal) priority as a string,
                             # choose from: emerg, alert, crit, err, warning, notice, info, debug
$enable_db = 1;              # enable use of BerkeleyDB/libdb (SNMP and nanny)
$enable_global_cache = 1;    # enable use of libdb-based cache if $enable_db=1
$nanny_details_level = 2;    # nanny verbosity: 1: traditional, 2: detailed

# @lookup_sql_dsn =
#   ( ['DBI:mysql:database=mail;host=127.0.0.1;port=3306', 'user1', 'passwd1'],
#     ['DBI:mysql:database=mail;host=host2', 'username2', 'password2'],
#     ["DBI:SQLite:dbname=$MYHOME/sql/mail_prefs.sqlite", '', ''] );
# @storage_sql_dsn = @lookup_sql_dsn;  # none, same, or separate database

# @storage_redis_dsn = ( {server=>'127.0.0.1:6379', db_id=>1} );
# $redis_logging_key = 'amavis-log';
# about 250 MB / 100000
# $redis_logging_queue_size_limit = 300000;

# $timestamp_fmt_mysql = 1; # if using MySQL *and* msgs.time_iso is TIMESTAMP;
#   defaults to 0, which is good for non-MySQL or if msgs.time_iso is CHAR(16)

################################################################################
## SOCKETS
#

@listen_sockets = (
  '127.0.0.1:10024',
  '127.0.0.1:9998',
  "$MYHOME/amavisd.sock"
  );

################################################################################
## POLICY MAPPINGS
# 

# TCP-Sockets
$interface_policy{'9998'}  = 'AM.PDP-INET';
$interface_policy{'10024'} = 'ORIGINATING';
 
# UNIX-Domain-Sockets
$interface_policy{'SOCK'}  = 'AM.PDP-SOCK';
 
# IP-Addressen/Ranges
# @client_ipaddr_policy = (
#     [qw( 0.0.0.0/8 127.0.0.1/32 [::] [::1] )]           => 'LOCALHOST',
#     [qw( !172.16.1.0/24 172.16.0.0/12 192.168.0.0/16 )] => 'PRIVATENETS',
#     [qw( 192.0.2.0/25 192.0.2.129 192.0.2.130 )]        => 'PARTNER',
#     [qw( 198.51.100.88/32 )]                            => 'CUSTOMERS',
#     [qw( 203.0.113.164/32 )]                            => 'HOSTING',
#     \@mynetworks                                        => 'MYNETS',
# );
 
# Map DKIM-verified sender(domains) to policy
# @author_to_policy_bank_maps = ( {
#   'example.com' => 'WHITELIST,NOBANNEDCHECK,NOVIRUSCHECK',
#   '.paypal.de'  => 'WHITELIST',
#   '.paypal.com' => 'WHITELIST',
#   'amazon.de'   => 'WHITELIST',
# } );

################################################################################
## DESTINATIONS
#

@local_domains_maps = ( read_hash("/opt/local/etc/postfix/all_local_domains_map") );
@mynetworks = qw( 127.0.0.0/8 192.168.0.0/16 );

################################################################################
## NOTIFICATIONS
#

$warn_offsite = 0;

# Envelope Sender
$mailfrom_notify_admin     = "postmaster\@$mydomain";
$mailfrom_notify_recip     = "postmaster\@$mydomain";
$mailfrom_notify_sender    = "postmaster\@$mydomain";
$mailfrom_notify_spamadmin = "postmaster\@$mydomain";
$mailfrom_to_quarantine    = '';
$dsn_bcc                   = "postmaster\@$mydomain";

# From: Header
$hdrfrom_notify_sender     = "Postmaster <postmaster\@$mydomain>";
$hdrfrom_notify_recip      = "Postmaster <postmaster\@$mydomain>";
$hdrfrom_notify_release    = "Postmaster <postmaster\@$mydomain>";
 
################################################################################
## VIRUS POLICY
#

# Check activate?
# @bypass_virus_checks_maps = (1);

# virus-quarantine? NO
$virus_quarantine_to = undef;

# Notify admin?
$virus_admin = undef;

# Notify recipent?
$warnvirusrecip = 1;

@addr_extension_virus_maps = ('virus');

# eMail bei Release wrappen?
$defang_virus  = 1;

# Always reject viruses!
$final_virus_destiny = D_REJECT;

@av_scanners = (
  ### http://www.clamav.net/
  ['ClamAV-clamd',
    \&ask_daemon, ["CONTSCAN {}\n", "/var/tmp/clamd.socket"],
    qr/\bOK$/m, qr/\bFOUND$/m,
    qr/^.*?: (?!Infected Archive)(.*) FOUND$/m ],
);

@av_scanners_backup = (
  ### http://www.clamav.net/   - backs up clamd or Mail::ClamAV
  ['ClamAV-clamscan', 'clamscan',
    "--stdout --no-summary -r --tempdir=$TEMPBASE {}",
    [0], qr/:.*\sFOUND$/m, qr/^.*?: (?!Infected Archive)(.*) FOUND$/m ],
);

################################################################################
## SPAM POLICY
#

# Check activate?
# @bypass_spam_checks_maps  = (1);

# spam quarantine?
$spam_quarantine_to = undef;

# Notify admin?
$spam_admin = undef;

# Recipient-Adresse bei Release erweitern?
@addr_extension_spam_maps = ('spam');

# eMail bei Release wrappen?
$defang_spam = undef;

# Always reject spam!
$final_spam_destiny = D_REJECT;

$sa_tag_level_deflt  = 2.0;  # add spam info headers if at, or above that level
$sa_tag2_level_deflt = 4.7;  # add 'spam detected' headers at that level
$sa_kill_level_deflt = 5.6;  # triggers spam evasive actions (e.g. blocks mail)
$sa_dsn_cutoff_level = 7;    # spam level beyond which a DSN is not sent
$sa_crediblefrom_dsn_cutoff_level = 18; # likewise, but for a likely valid From
# $sa_quarantine_cutoff_level = 25; # spam level beyond which quarantine is off
$penpals_bonus_score = 8;    # (no effect without a @storage_sql_dsn database)
$penpals_threshold_high = $sa_kill_level_deflt;  # don't waste time on hi spam
$bounce_killer_score = 100;  # spam score points to add for joe-jobbed bounces

$sa_mail_body_size_limit = 1024*1024*5; # don't waste time on SA if mail is larger
$sa_local_tests_only = 0;    # only tests which do not require internet access?
                             # NOTE: if set to 1 no razor-, pyzor- or dnsbl-
                             # queries will be done

$sa_spam_subject_tag = '***Spam*** ';

################################################################################
## BANNED POLICY
#

# Check aktivieren?
#@bypass_banned_checks_maps  = (1);

# banned quarantine? NO
$banned_quarantine_to = undef;
 
# Notify admin?
$banned_admin = undef;
 
# Recipient-Adresse bei Release erweitern?
@addr_extension_banned_maps = ('banned');

# eMail bei Release wrappen?
$defang_banned = 1;

# Wollen wir Content transportieren?
$final_banned_destiny = D_BOUNCE;

%banned_rules = (
  'NO-MS-EXEC'=> new_RE( qr'^\.(exe-ms)$' ),
  'PASSALL'   => new_RE( [qr'^' => 0] ),
  'ALLOW_EXE' => new_RE( qr'.\.(vbs|pif|scr|bat)$'i, [qr'^\.exe$' => 0] ),
  'ALLOW_VBS' => new_RE( [qr'.\.vbs$' => 0] ),
  'NO-VIDEO'  => new_RE( qr'^\.movie$', qr'.\.(asf|asx|mpg|mpe|mpeg|avi|mp3|wav|wma|wmf|wmv|mov|vob)$'i, ),
  'NO-MOVIES' => new_RE( qr'^\.movie$', qr'.\.(mpg|avi|mov)$'i, ),
  'MYNETS-DEFAULT' => new_RE( [ qr'^\.(rpm|cpio|tar)$' => 0 ], qr'.\.(vbs|pif|scr)$'i, ),
  'DEFAULT' => $banned_filename_re,
);

$banned_filename_re = new_RE(
  qr'^\.(exe|lha|cab|dll)$',              # banned file(1) types
  [ qr'^\.(rpm|cpio|tar)$'       => 0 ],  # allow any in Unix-type archives
  qr'.\.(pif|scr)$'i,                     # banned extensions - rudimentary
  qr'^application/x-msdownload$'i,        # block these MIME types
  qr'^application/x-msdos-program$'i,
  qr'^application/hta$'i,
  # block certain double extensions in filenames
  qr'\.[^./]*[A-Za-z][^./]*\.\s*(exe|vbs|pif|scr|bat|cmd|com|cpl|dll)[.\s]*$'i,
  qr'.\.(ani|cur|ico)$'i,                 # banned cursors and icons filename
  qr'^\.ani$',                            # banned animated cursor file(1) type
  qr'.\.(mim|b64|bhx|hqx|xxe|uu|uue)$'i,  # banned extension - WinZip vulnerab.
  # Windows Class ID CLSID, strict
  # qr'\{[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}\}?'i,
  # https://www.mailsupport.dfn.de/dokumentation/checks/anhaenge/
  qr'.\.(ade|adp|app|asp|bas|bat|chm|cmd|cnt|com|cpl|exe|fxp|gadget|grp|hlp|hpj|hta|ins|isp|its|jar|js|jse|lnk|mad|maf|mag|mam|maq|mar|mas|mau|mav|maw|mcf|mda|mdb|mde|mdt|mdw|mdz|msc|msh|msh1|msh2|mshxml|msh1xml|msh2xml|msi|msp|mst|ops|osd|pcd|pif|plg|prf|prg|ps1|ps1xml|ps2|ps2xml|psc1|psc2|pst|reg|scf|scr|sct|shb|shs|vb|vbe|vbp|vbs|vsmacros|vsw|ws|wsc|wsf|wsh|xbap|xnk)[.\s]*$'i,
);

################################################################################
## HEADER POLICY
#

# Activate check?
# @bypass_header_checks_maps = (1);

# header quarantine? NO
$bad_header_quarantine_method = undef;

# Extend recipient-address for release?
@addr_extension_bad_header_maps = ('badh');
 
# eMail bei Release wrappen?
# NUL or CR character in header
$defang_by_ccat{CC_BADH.",3"} = 1;
# header line longer than 998 characters
$defang_by_ccat{CC_BADH.",5"} = 1;
# header field syntax error
$defang_by_ccat{CC_BADH.",6"} = 1;

# Wollen wir Content transportieren?
$final_bad_header_destiny = D_PASS;

# Notify admin? NO
$bad_header_admin = undef;

# Notify sender? NO
$warnbadhsender = undef;

# Notify recipient? NO
$warnbadhrecip = undef;

################################################################################
## UNCHECKED POLICY
# 
$undecipherable_subject_tag = undef;
 
$MAXLEVELS = 14;
$MAXFILES = 3000;
$MIN_EXPANSION_QUOTA =      100*1024;  # bytes  (default undef, not enforced)
$MAX_EXPANSION_QUOTA = 300*1024*1024;  # bytes  (default undef, not enforced)

################################################################################
## DKIM - Domain Key Identified Mail
#

# verify DKIM-signature
$enable_dkim_verification = 1;

# Create DKIM-Signature
$enable_dkim_signing = 0;

# get list of domains from file to generate dkim_key(s)
open(filehandle,'/opt/local/etc/postfix/all_dkim_domains_map')
  or die "Can't open domain-list-file: $!";
  while (<filehandle>)
  {
    chomp; s/\s*#.*$//; next if $_ eq '';
    dkim_key($_, 'mail201903', '/var/amavis/db/dkim-key-mail201903.pem');
  }
  close(filehandle) or die "Can't close domain-list-file: $!";

# DKIM Signing Policies
@dkim_signature_options_bysender_maps = ({
  '.' => {
           a => 'rsa-sha256',
           ttl => 21*24*3600,
           c => 'relaxed/relaxed',
         },
  });

# to query p0f-analyzer.pl
# $os_fingerprint_method = 'p0f:*:2345';

## hierarchy by which a final setting is chosen:
##   policy bank (based on port or IP address) -> *_by_ccat
##   *_by_ccat (based on mail contents) -> *_maps          
##   *_maps (based on recipient address) -> final configuration value

################################################################################
## POLICY BANKS
#
 
## POLICY BANK MYNETWORK
# All hosts listed in MYNETS
$policy_bank{'MYNETS'} = {
  originating => 1,
  os_fingerprint_method => undef,
  $admin_maps_by_ccat{+CC_UNCHECKED.',1'} = undef;
};
 
## POLICY BANK SUBMISSON
$policy_bank{'ORIGINATING'} = {
  inet_acl                    => [qw( 127.0.0.1 )],
  originating                 => 1,
  allow_disclaimers           => 0,
  warnbadhsender              => 1,
  enable_dkim_signing         => 1,
  forward_method              => 'smtp:[127.0.0.1]:10025',
  smtpd_discard_ehlo_keywords => ['8BITMIME'],
  terminate_dsn_on_notify_success => 0,
  $admin_maps_by_ccat{+CC_UNCHECKED.',1'} => undef,
};

# MILTER policy
$policy_bank{'AM.PDP-SOCK'} = {
    protocol => 'AM.PDP',
    auth_required_release => 0, # do not require secret_id for amavisd-release
};

# Release policy
$policy_bank{'AM.PDP-INET'} = {
    protocol => 'AM.PDP',
    inet_acl => [qw( 127.0.0.1 )],
    auth_required_release => 0,
};

## POLICY BANK: WHITELIST
  $policy_bank{'WHITELIST'} = {
    bypass_spam_checks_maps => [1],
    spam_lovers_maps => [1],
  };

## POLICY BANK: NOVIRUSCHECK
  $policy_bank{'NOVIRUSCHECK'} = {
    bypass_decode_parts => 1,
    bypass_virus_checks_maps => [1],
    virus_lovers_maps => [1],
  };

## POLICY BANK: NOBANNEDCHECK
  $policy_bank{'NOBANNEDCHECK'} = {
    bypass_banned_checks_maps => [1],
    banned_files_lovers_maps  => [1],
  };

################################################################################
## SENDER-MAPS AND DECODERS
#

# http://www.akadia.com/services/postfix_amavisd.html#Globally%20Sender%20Whitelists%20and%20Blacklists
@whitelist_sender_maps = ( [".example.net"] );
@blacklist_sender_maps = ( [".emailsoftware.net", ".emms.com"] );

# ENVELOPE SENDER SOFT-WHITELISTING / SOFT-BLACKLISTING
@score_sender_maps = ({
# ## per-recipient personal tables  (NOTE: positive: black, negative: white)
# 'user1@example.com'  => [{'bla-mobile.press@example.com' => 10.0}],
# 'user3@example.com'  => [{'.ebay.com'                 => -3.0}],
# 'user4@example.com'  => [{'cleargreen@cleargreen.com' => -7.0,
#                           '.cleargreen.com'           => -5.0}],

  # soft-whitelisting for example.com
  #'fax@example.com'           => [{'xscanner@example.com' => -3.0}],

  ## site-wide opinions about senders (the '.' matches any recipient)
  '.' => [  # the _first_ matching sender determines the score boost

  new_RE(  # regexp-type lookup table, just happens to be all soft-blacklist
    [qr'^(bulkmail|offers|cheapbenefits|earnmoney|foryou)@'i         => 5.0],
    [qr'^(greatcasino|investments|lose_weight_today|market\.alert)@'i=> 5.0],
    [qr'^(money2you|MyGreenCard|new\.tld\.registry|opt-out|opt-in)@'i=> 5.0],
    [qr'^(optin|saveonlsmoking2002k|specialoffer|specialoffers)@'i   => 5.0],
    [qr'^(stockalert|stopsnoring|wantsome|workathome|yesitsfree)@'i  => 5.0],
    [qr'^(your_friend|greatoffers)@'i                                => 5.0],
    [qr'^(inkjetplanet|marketopt|MakeMoney)\d*@'i                    => 5.0],
  ),

#  read_hash("/var/amavis/sender_scores_sitewide"),

  { # a hash-type lookup table (associative array)
    'nobody@cert.org'                        => -3.0,
    'cert-advisory@us-cert.gov'              => -3.0,
    'owner-alert@iss.net'                    => -3.0,
    'slashdot@slashdot.org'                  => -3.0,
    'securityfocus.com'                      => -3.0,
    'ntbugtraq@listserv.ntbugtraq.com'       => -3.0,
    'security-alerts@linuxsecurity.com'      => -3.0,
    'mailman-announce-admin@python.org'      => -3.0,
    'amavis-user-admin@lists.sourceforge.net'=> -3.0,
    'amavis-user-bounces@lists.sourceforge.net' => -3.0,
    'spamassassin.apache.org'                => -3.0,
    'notification-return@lists.sophos.com'   => -3.0,
    'owner-postfix-users@postfix.org'        => -3.0,
    'owner-postfix-announce@postfix.org'     => -3.0,
    'owner-sendmail-announce@lists.sendmail.org'   => -3.0,
    'sendmail-announce-request@lists.sendmail.org' => -3.0,
    'donotreply@sendmail.org'                => -3.0,
    'ca+envelope@sendmail.org'               => -3.0,
    'noreply@freshmeat.net'                  => -3.0,
    'owner-technews@postel.acm.org'          => -3.0,
    'ietf-123-owner@loki.ietf.org'           => -3.0,
    'cvs-commits-list-admin@gnome.org'       => -3.0,
    'rt-users-admin@lists.fsck.com'          => -3.0,
    'clp-request@comp.nus.edu.sg'            => -3.0,
    'surveys-errors@lists.nua.ie'            => -3.0,
    'emailnews@genomeweb.com'                => -5.0,
    'yahoo-dev-null@yahoo-inc.com'           => -3.0,
    'returns.groups.yahoo.com'               => -3.0,
    'clusternews@linuxnetworx.com'           => -3.0,
    lc('lvs-users-admin@LinuxVirtualServer.org')    => -3.0,
    lc('owner-textbreakingnews@CNNIMAIL12.CNN.COM') => -5.0,
    
    # soft-whitelisting (negative score)
    # 'mail@example.com'                         =>  -2.0,

    # soft-blacklisting (positive score)
    'sender@example.net'                     =>  3.0,
    '.example.net'                           =>  1.0,
   },
  ],  # end of site-wide tables
});

@decoders = (
  ['mail', \&do_mime_decode],
# [[qw(asc uue hqx ync)], \&do_ascii],  # not safe
  ['F',    \&do_uncompress, ['unfreeze', 'freeze -d', 'melt', 'fcat'] ],
  ['Z',    \&do_uncompress, ['uncompress', 'gzip -d', 'zcat'] ],
  ['gz',   \&do_uncompress, 'gzip -d'],
  ['gz',   \&do_gunzip],
  ['bz2',  \&do_uncompress, 'bzip2 -d'],
  ['xz',   \&do_uncompress,
           ['xzdec', 'xz -dc', 'unxz -c', 'xzcat'] ],
  ['lzma', \&do_uncompress,
           ['lzmadec', 'xz -dc --format=lzma',
            'lzma -dc', 'unlzma -c', 'lzcat', 'lzmadec'] ],
  ['lrz',  \&do_uncompress,
           ['lrzip -q -k -d -o -', 'lrzcat -q -k'] ],
  ['lzo',  \&do_uncompress, 'lzop -d'],
  ['lz4',  \&do_uncompress, ['lz4c -d'] ],
  ['rpm',  \&do_uncompress, ['rpm2cpio.pl', 'rpm2cpio'] ],
  [['cpio','tar'], \&do_pax_cpio, ['pax', 'gcpio', 'cpio'] ],
           # ['/usr/local/heirloom/usr/5bin/pax', 'pax', 'gcpio', 'cpio']
  ['deb',  \&do_ar, 'ar'],
# ['a',    \&do_ar, 'ar'],  # unpacking .a seems an overkill
  ['rar',  \&do_unrar, ['unrar', 'rar'] ],
  ['arj',  \&do_unarj, ['unarj', 'arj'] ],
  ['arc',  \&do_arc,   ['nomarch', 'arc'] ],
  ['zoo',  \&do_zoo,   ['zoo', 'unzoo'] ],
  ['doc',  \&do_ole,   'ripole'],
  ['cab',  \&do_cabextract, 'cabextract'],
  ['tnef', \&do_tnef_ext, 'tnef'],
  ['tnef', \&do_tnef],
# ['lha',  \&do_lha,   'lha'],  # not safe, use 7z instead
# ['sit',  \&do_unstuff, 'unstuff'],  # not safe
  [['zip','kmz'], \&do_7zip,  ['7za', '7z'] ],
  [['zip','kmz'], \&do_unzip],
  ['7z',   \&do_7zip,  ['7zr', '7za', '7z'] ],
  [[qw(gz bz2 Z tar)],
           \&do_7zip,  ['7za', '7z'] ],
  [[qw(xz lzma jar cpio arj rar swf lha iso cab deb rpm)],
           \&do_7zip,  '7z' ],
  ['exe',  \&do_executable, ['unrar','rar'], 'lha', ['unarj','arj'] ],
);

@keep_decoded_original_maps = (new_RE(
  qr'^MAIL$',   # retain full original message for virus checking
  qr'^MAIL-UNDECIPHERABLE$', # recheck full mail if it contains undecipherables
  qr'^(ASCII(?! cpio)|text|uuencoded|xxencoded|binhex)'i,
# qr'^Zip archive data',     # don't trust Archive::Zip
));

1;  # insure a defined return value