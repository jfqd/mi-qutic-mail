#!/usr/bin/bash

PATH=/opt/local/gnu/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin

# Exit if any commands fail
set -o errexit

AUTORESPONDER_VERSION="v0.1.0"
YARA_RULES_VERSION="0.0.1"

MUNIN_PLUGINS="
	postfix_mailvolume
	postfix_mailstats
	postfix_mailqueue
	postgrey
	clamav
	spamassassin
	ps_smtpd
	fail2ban
	dovecot
	amavis
	netstat
"

echo "* Get latest updatess"
pkgin update
pkgin -y upgrade || true

echo "* Activate munin plugins"
/opt/qutic/bin/munin-node-plugins ${MUNIN_PLUGINS}
rm /opt/local/etc/munin/plugins/cert_expire

echo "* Fix fail2ban"
gsed -i \
     's/journalmatch = _SYSTEMD_UNIT=dovecot.service/# journalmatch = _SYSTEMD_UNIT=dovecot.service/' \
     /opt/local/etc/fail2ban/filter.d/dovecot.conf
gsed -i \
     's/journalmatch = _SYSTEMD_UNIT=postfix.service/# journalmatch = _SYSTEMD_UNIT=postfix.service/' \
      /opt/local/etc/fail2ban/filter.d/postfix-sasl.conf
gsed -i \
     's/journalmatch = _SYSTEMD_UNIT=postfix.service/# journalmatch = _SYSTEMD_UNIT=postfix.service/' \
      /opt/local/etc/fail2ban/filter.d/postfix.conf

echo "* Import fail2ban smf"
svccfg import /opt/local/lib/svc/manifest/fail2ban.xml
sed -i 's#/var/run/fail2ban/fail2ban.sock#/var/run/fail2ban.sock#' /opt/local/etc/fail2ban/fail2ban.conf
sed -i 's#/var/run/fail2ban/fail2ban.pid#/var/run/fail2ban.pid#' /opt/local/etc/fail2ban/fail2ban.conf
svcadm enable svc:/network/fail2ban:default

# echo "* Install latest dovecot version"
# curl -s https://pkgsrc.qutic.com/packages/SmartOS/extras/dovecot-2.3.2.1.tgz > /root/dovecot-2.3.2.1.tgz
# curl -s https://pkgsrc.qutic.com/packages/SmartOS/extras/dovecot-mysql-2.3.2.1.tgz > dovecot-mysql-2.3.2.1.tgz
# sed -i 's/VERIFIED_INSTALLATION=always/#VERIFIED_INSTALLATION=always/' /opt/local/etc/pkg_install.conf
# pkg_add /root/dovecot-2.3.2.1.tgz
# pkg_add /root/dovecot-mysql-2.3.2.1.tgz
# sed -i 's/#VERIFIED_INSTALLATION=always/VERIFIED_INSTALLATION=always/' /opt/local/etc/pkg_install.conf
# rm /root/dovecot-2.3.2.1.tgz
# rm /root/dovecot-mysql-2.3.2.1.tgz

echo "* Setup vmail"
groupadd -g 155 vmail
useradd -m -s /usr/bin/bash -d /var/mail -u 155 -g vmail vmail
passwd -N vmail
# passwd -d vmail

echo "* Make mail folder unwritable without nfs"
mkdir -p /var/mail
chown root:root /var/mail
chmod 0750 /var/mail

echo "* setup pid folders"
mkdir -p /var/run/clamd
chown clamav:clamav /var/run/clamd

echo "* Create spamd group and user"
groupadd spamd
useradd -d /var/spamassassin -c "spamassassin spamd user" -s /usr/bin/bash -g spamd spamd
passwd -N spamd

echo "* Update permissions for spamassassin folders"
mkdir -p /var/spamassassin/.spamassassin
chown -R spamd:spamd /var/spamassassin
chown -R spamd:spamd /opt/local/etc/spamassassin

echo "* Prepare qutic spammassasin rules"
mkdir -p /var/spamassassin/3.004001/updates_qutic_com
cat >> /var/spamassassin/3.004001/updates_qutic_com.cf << EOF
include updates_qutic_com/80_QD_body.cf
include updates_qutic_com/80_QD_header.cf
EOF
touch /var/spamassassin/3.004001/updates_qutic_com/80_QD_body.cf
touch /var/spamassassin/3.004001/updates_qutic_com/80_QD_header.cf

# Create logging folder for spamd
echo "* Create logging folder for spamd"
mkdir /var/log/spamd
chown -R spamd:spamd /var/log/spamd

echo "* setup policyd"
groupadd -g 904 policyd
useradd -m -s /usr/bin/false -d /nonexistent -u 904 -g policyd policyd
mkdir /var/log/cbpolicyd
mkdir -p /var/cbpolicyd
chown policyd:policyd /var/log/cbpolicyd /var/cbpolicyd
svccfg import /opt/local/lib/svc/manifest/policyd.xml

echo "* Backup original config files"
mv /opt/local/etc/postfix/main.cf /opt/local/etc/postfix/main.cf.bak
mv /opt/local/etc/postfix/master.cf /opt/local/etc/postfix/master.cf.bak
mv /opt/local/etc/amavisd.conf /opt/local/etc/amavisd.conf.bak
mv /opt/local/etc/clamd.conf /opt/local/etc/clamd.conf.bak
mv /opt/local/etc/freshclam.conf /opt/local/etc/freshclam.conf.bak
mv /opt/local/etc/dovecot/dovecot.conf /opt/local/etc/dovecot/dovecot.conf.bak
mv /opt/local/etc/spamassassin/local.cf /opt/local/etc/spamassassin/local.cf.bak

echo "* Move new config files into place"
mv /opt/local/etc/tmp/main.cf /opt/local/etc/postfix/main.cf
mv /opt/local/etc/tmp/master.cf /opt/local/etc/postfix/master.cf
mv /opt/local/etc/tmp/amavisd.conf /opt/local/etc/amavisd.conf
mv /opt/local/etc/tmp/clamd.conf /opt/local/etc/clamd.conf
mv /opt/local/etc/tmp/freshclam.conf /opt/local/etc/freshclam.conf
mv /opt/local/etc/tmp/cluebringer.conf /opt/local/etc/cluebringer.conf
mv /opt/local/etc/tmp/dovecot.conf /opt/local/etc/dovecot/dovecot.conf
mv /opt/local/etc/tmp/local.cf /opt/local/etc/spamassassin/local.cf
mv /opt/local/etc/tmp/mailer.conf /etc/mailer.conf
mv /opt/local/etc/tmp/my.cnf /root/.my.cnf

echo "* Create Log folder for clamav"
mkdir -p /var/log/clamav
chown clamav:clamav /var/log/clamav
chmod 0755 /var/log/clamav

echo "* Set Folder rights"
chmod 0640 /opt/local/etc/cluebringer.conf
chown root:policyd /opt/local/etc/cluebringer.conf
mkdir -p /opt/local/etc/postfix/sql
chmod 0750 /opt/local/etc/postfix/sql
chmod 0640 /opt/local/etc/postfix/sql/*
chown -R root:postfix /opt/local/etc/postfix/sql
chmod 0600 /opt/local/etc/dovecot/dovecot-sql.conf
chown root:root /opt/local/etc/dovecot/dovecot-sql.conf
touch /var/log/dovecot.log
chmod 0644 /var/log/dovecot.log
touch /var/log/fail2ban.log
chmod 0644 /var/log/fail2ban.log
chmod 0600 /root/.my.cnf
mkdir -p /var/amavis/tmp
mkdir -p /var/amavis/db
mkdir -p /var/amavis/var
chown -R amavis:amavis /var/amavis

echo "* Setup clamav-unofficial-sigs"
mkdir -p /var/log/clamav-unofficial-sigs
chown clamav:clamav /var/log/clamav-unofficial-sigs
mkdir -p /var/db/clamav-unofficial-sigs
chown clamav:clamav /var/db/clamav-unofficial-sigs

echo "* Setup amavisn clamav"
usermod -G amavis clamav
usermod -G clamav amavis

echo "* setup spiped"
groupadd -g 120 spiped
useradd -m -s /usr/bin/false -d /nonexistent -u 120 -g spiped spiped
dd if=/dev/urandom bs=32 count=1 2>/dev/null | shasum -a 512 | awk '{print $1}' | tr -d '\n' > /etc/ssh/spiped.key
chmod 0640 /etc/ssh/spiped.key
chown root:spiped /etc/ssh/spiped.key
svccfg delete svc:/pkgsrc/spiped:default

echo "* setup ssl infrastructure"
mkdir -p /opt/local/etc/ssl/private
chmod 0755 /opt/local/etc/ssl/
chmod 0750 /opt/local/etc/ssl/private
chown -R root:root /opt/local/etc/ssl

echo "* setup policyd-spf"
mkdir -p /opt/local/etc/python-policyd-spf
cp /opt/local/etc/tmp/policyd-spf.conf /opt/local/etc/python-policyd-spf/policyd-spf.conf

echo "* setup opendkim"
mv /opt/local/etc/opendkim.conf /opt/local/etc/opendkim.conf.bak
cp /opt/local/etc/tmp/opendkim.conf /opt/local/etc/opendkim.conf
echo "127.0.0.1" >> /var/db/opendkim/trusted_hosts
svccfg import /opt/local/lib/svc/manifest/opendkim.xml

echo "* setup opendmarc"
groupadd -g 920 opendmarc
useradd -m -s /usr/bin/false -d /nonexistent -u 920 -g opendmarc opendmarc
mkdir -p /opt/local/etc/opendmarc
echo "127.0.0.1" >> /opt/local/etc/opendmarc/ignore.hosts
cp /opt/local/etc/tmp/opendmarc.conf /opt/local/etc/opendmarc/opendmarc.conf
mkdir -p /var/run/opendmarc
chown opendmarc:opendmarc /var/run/opendmarc
svccfg import /opt/local/lib/svc/manifest/opendmarc.xml

echo "* setup amavisd-milter"
svccfg import /opt/local/lib/svc/manifest/amavisd-milter.xml

echo "* Setup proxysql";
pkg_add https://download.qutic.com/extras/proxysql-1.4.7.tgz || true
mkdir -p /opt/local/var/proxysql
groupadd -g 130 proxysql
useradd -m -s /usr/bin/false -d /opt/local/var/proxysql -u 130 -g proxysql proxysql
chown proxysql:proxysql /opt/local/var/proxysql/
mv /opt/local/etc/proxysql.cnf /opt/local/etc/proxysql.cnf.bak || true
mv /opt/local/etc/tmp/proxysql.cnf /opt/local/etc/proxysql.cnf
chmod 0640 /opt/local/etc/proxysql.cnf
chown root:proxysql /opt/local/etc/proxysql.cnf
svccfg import /opt/local/lib/svc/manifest/proxysql.xml
ln -nfs /var/svc/log/pkgsrc-proxysql:default.log /var/log/proxysql_log

echo "* setup autoresponder"
mkdir -p /opt/local/var/vmail
curl -L -s https://github.com/jfqd/autoresponder/archive/${AUTORESPONDER_VERSION}.tar.gz | gtar xz -C /opt/local/var/vmail --strip-components=1
sed -i 's#/var/lib/vmail#/opt/local/var/vmail#' /opt/local/var/vmail/autoresponder
gem install redis
gem install dotenv
gem install mail
gem install pony
mv /opt/local/var/vmail/env /opt/local/var/vmail/.env
chmod 0640 /opt/local/var/vmail/.env
chown root:vmail /opt/local/var/vmail/.env
touch /var/log/autoresponder.log
chown vmail:root /var/log/autoresponder.log

echo "* import amavisd.xml"
svccfg import /opt/local/lib/svc/manifest/amavisd.xml

echo "* setup clamav yara-rules"
curl -L -s https://github.com/jfqd/yara-rules/archive/v${YARA_RULES_VERSION}.tar.gz | gtar xz -C /var/clamav --strip-components=1

# Clean up
echo "* Cleaning up."
rm -rf /opt/local/etc/tmp/
rm /root/customize
/usr/sbin/svccfg delete svc:/pkgsrc/nullmailer
rm /var/zoneinit/includes/17-nullmailer.sh
rm -rf /var/log/nullmailer
userdel nullmail
groupdel nullmail

# Prepare image for provisioning
sm-prepare-image -y
